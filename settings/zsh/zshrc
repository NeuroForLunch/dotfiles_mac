# execution order zshenv > zprofile > zshrc > zpreztorc > zlogin > zlogout
# shortcut to this dotfiles path is $ZSH
export ZSH=$HOME/.zsh
export PROJECTS=~/Dropbox/github/

# get environment variables from ~/.private
#if [[ -a ~/.private ]]
#then
#  source ~/.private
#fi

if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi


typeset -U config_files # create variable config_files
config_files=($ZSH/*.zsh)


# load the path files
for file in ${(M)config_files:#*/path.zsh}
do
  source $file
done

# load all zsh but path.zsh and completion.zsh files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}
do
  source $file
done

# Set prompt style
autoload -Uz compinit
compinit
prompt pure


# load every completion.zsh
for file in ${(M)config_files:#*/completion.zsh}
do
  source $file
done

unset config_files
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
_sqlitebiter_completion() {
    local -a completions
    local -a completions_with_descriptions
    local -a response
    response=("${(@f)$( env COMP_WORDS="${words[*]}"                                         COMP_CWORD=$((CURRENT-1))                                         _SQLITEBITER_COMPLETE="complete_zsh"                                         sqlitebiter )}")

    for key descr in ${(kv)response}; do
    if [[ "$descr" == "_" ]]; then
        completions+=("$key")
    else
        completions_with_descriptions+=("$key":"$descr")
    fi
    done

    if [ -n "$completions_with_descriptions" ]; then
        _describe -V unsorted completions_with_descriptions -U -Q
    fi

    if [ -n "$completions" ]; then
        compadd -U -V unsorted -Q -a completions
    fi
    compstate[insert]="automenu"
}

compdef _sqlitebiter_completion sqlitebiter;
